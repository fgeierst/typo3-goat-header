@use '../base/breakpoints';

/*  .header
*      ├─ item (logo)
*      │   └── link
*      ├─ item (metanav/mobile)
*      │   └── link
*      ├─ item (mainnav)
*      │   ├── toggle-button
*      │   │     └─ icon
*      │   └── clipbox
*      │         └─ sliding-panel
*      │                └── .mainnav
*      └─ item (metanav/desktop)
*          └── link
*/

.header {
  --color-background: var(--color-black); // --header-background-color: white;
  --color-text: var(--color-white); // --header-color: red;
  --header-height: var(--space-400);
  --header-button-width: var(--min-tap-target-size);
  --header-focus-outline: var(--focus-outline, 2px solid hsl(219, 82%, 56%));
  --header-focus-outline-offset: var(--focus-outline-offset, 2px);
  --header-tablet-sidebar-width: 22.5rem;
  --header-max-content-width: 900px;
  --header-transition-duration: var(--transition-duration, 0.2s);
  --header-transition-duration-function: var(--transition-duration-function, cubic-bezier(0.77, 0, 0.175, 1));
  --header-font-size-sm: var(--font-size-sm, 14px);
  --header-font-size-md: var(--font-size-md, 24px);
  --header-font-size-lg: var(--font-size-lg, 32px);

  // --header-padding-inline: 24px;
  // --header-border: solid 1px #333333;

  position: sticky; // .mainnav__clipbox is absolutely positioned relative to this.
  inset-block-start: 0;
  height: var(--header-height);
  padding-inline-start: calc(var(--page-margin) - var(--space-75)); // Corresponds to .header__link padding-inline
  padding-inline-end: calc(var(--page-margin) - var(--space-75)); // Corresponds to .header__link icon padding-inline
  border-block-end: 1px solid var(--color-white);
  background-color: var(--color-background);
  color: var(--color-text);
  font-size: var(--header-font-size-sm);

  display: flex;
  justify-content: flex-end;
  gap: var(--space-50);

  &::after {
    content: "";
    background-color: rgba(0, 0, 0, 0.4);
    -webkit-backdrop-filter: blur(5px);
    backdrop-filter: blur(5px);
    position: fixed;
    inset: var(--header-height) 0 0 0;
    pointer-events: none;
    opacity: 0;
    transition: opacity var(--header-transition-duration) ease-in-out;
  }

  &[data-expanded]::after {
    opacity: 1;
  }

  &__item {
    display: grid;
    z-index: 1;

    @media (max-width: breakpoints.$md) {

      // If one item is open, hide all other items.
      .header[data-expanded] &:not([data-expanded]) {
        display: none;
      }
    }

    &--mobile-only {
      @media (min-width: (breakpoints.$md + 1px)) {
        display: none;
      }
    }

    &--desktop-only {
      display: none;

      @media (min-width: (breakpoints.$md + 1px)) {
        display: grid;
      }
    }

    &--logo {
      flex-grow: 1;
      justify-content: start;
    }

    &--mainnav {
      flex-grow: unset;

      @media (min-width: (breakpoints.$md + 1px)) {
        flex-grow: 1;
      }
    }
  }

  &__link {
    display: grid;
    align-items: center;
    padding-inline-start: var(--space-75);
    padding-inline-end: var(--space-75);

    text-decoration: none;
    &:hover, &:focus-visible {
      text-decoration: underline;
      text-underline-offset: .3rem;
    }
  }

  [aria-current='page'] {
    // font-weight: bold;
  }

  :focus-visible {
    outline-offset: calc(var(--header-focus-outline-offset) * -1);
  }

  // Mobile
  @media (min-width: breakpoints.$md) {
    &__clipbox, &__sliding-panel {
      display: grid;
    }
  }

  // Desktop
  @media (max-width: breakpoints.$md) {
    &__clipbox {
      position: fixed;
      top: var(--header-height);
      right: 0;
      left: 0;
      bottom: 0;
      transition: visibility var(--header-transition-duration);
      overflow: hidden;
      display: grid;

      @media (min-width: breakpoints.$sm) {
        width: var(--header-tablet-sidebar-width, 22.5rem);
        left: unset;
      }

      .header__toggle-button[aria-expanded="false"] + & {
        visibility: hidden;
        z-index: 2;
      }
    }

    &__sliding-panel {
      background-color: var(--color-background);
      transition: transform var(--header-transition-duration) var(--header-transition-duration-function), visibility var(--header-transition-duration);
      overflow-y: auto;

      .header__toggle-button[aria-expanded="false"] + .header__clipbox & {
        transform: translatey(-100%);
        visibility: hidden;
      }
    }

    &__toggle-button {
      &:focus-visible {
        outline-offset: calc(var(--header-focus-outline-offset) * -1);
      }
    }
  }
}

body:has(.header[data-expanded]) {
  overflow-y: hidden;
}
